import{_ as e,o as i,c as s,R as t}from"./chunks/framework.6Daji7ki.js";const k=JSON.parse('{"title":"Learn Service Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"services/learn.md","filePath":"services/learn.md"}'),a={name:"services/learn.md"},l=t('<h1 id="learn-service-documentation" tabindex="-1">Learn Service Documentation <a class="header-anchor" href="#learn-service-documentation" aria-label="Permalink to &quot;Learn Service Documentation&quot;">​</a></h1><p>The <code>LearnService</code> is responsible for handling learn-related operations within the AI-Res server.</p><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h2><ul><li><a href="#class-learnservice">Class: LearnService</a><ul><li><a href="#methods">Methods</a><ul><li><a href="#getstatus">getStatus</a></li><li><a href="#validateidformat">validateIdFormat</a></li><li><a href="#getlearn">getLearn</a></li><li><a href="#getcoursebyid">getCourseById</a></li><li><a href="#enroll">enroll</a></li><li><a href="#gettopics">getTopics</a></li><li><a href="#getmodule">getModule</a></li></ul></li></ul></li></ul><h2 id="class-learnservice" tabindex="-1">Class: LearnService <a class="header-anchor" href="#class-learnservice" aria-label="Permalink to &quot;Class: LearnService&quot;">​</a></h2><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><h4 id="getstatus" tabindex="-1"><code>getStatus</code> <a class="header-anchor" href="#getstatus" aria-label="Permalink to &quot;`getStatus`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): string</span></span></code></pre></div><p>Retrieves the status of the authentication service.</p><ul><li><strong>Returns:</strong><ul><li><code>string</code>: A string indicating the status of the authentication service.</li></ul></li></ul><h4 id="validateidformat" tabindex="-1"><code>validateIdFormat</code> <a class="header-anchor" href="#validateidformat" aria-label="Permalink to &quot;`validateIdFormat`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">private </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validateIdFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id: string, field: string): number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ForbiddenException</span></span></code></pre></div><p>Validates the format of an ID.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>id</code> (string): The ID to validate.</li><li><code>field</code> (string): The field name associated with the ID.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><code>number | ForbiddenException</code>: The parsed ID as a number or a <code>ForbiddenException</code> if the ID format is invalid.</li></ul></li></ul><h4 id="getlearn" tabindex="-1"><code>getLearn</code> <a class="header-anchor" href="#getlearn" aria-label="Permalink to &quot;`getLearn`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLearn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Course[]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Retrieves all learn courses.</p><ul><li><strong>Returns:</strong><ul><li><code>Promise&lt;Course[]&gt;</code>: A promise that resolves to an array of courses.</li></ul></li></ul><h4 id="getcoursebyid" tabindex="-1"><code>getCourseById</code> <a class="header-anchor" href="#getcoursebyid" aria-label="Permalink to &quot;`getCourseById`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCourseById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(courseId: string): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Course </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ForbiddenException</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Retrieves a course by its ID.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>courseId</code> (string): The ID of the course to retrieve.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><code>Promise&lt;Course | ForbiddenException&gt;</code>: A promise that resolves to the course or a <code>ForbiddenException</code> if the course is not found.</li></ul></li></ul><h4 id="enroll" tabindex="-1"><code>enroll</code> <a class="header-anchor" href="#enroll" aria-label="Permalink to &quot;`enroll`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enroll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(courseId: string, userId: string, token: string): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ForbiddenException</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Enrolls a user in a course.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>courseId</code> (string): The ID of the course to enroll in.</li><li><code>userId</code> (string): The ID of the user to enroll.</li><li><code>token</code> (string): The token for user authentication.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><code>Promise&lt;string | ForbiddenException&gt;</code>: A promise that resolves to a string indicating the enrollment status or a <code>ForbiddenException</code> if the user or course is not found.</li></ul></li></ul><h4 id="gettopics" tabindex="-1"><code>getTopics</code> <a class="header-anchor" href="#gettopics" aria-label="Permalink to &quot;`getTopics`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTopics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(courseId: string): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Subtopic[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ForbiddenException</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Retrieves the topics of a course.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>courseId</code> (string): The ID of the course.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><code>Promise&lt;Subtopic[] | ForbiddenException&gt;</code>: A promise that resolves to an array of topics or a <code>ForbiddenException</code> if the course is not found.</li></ul></li></ul><h4 id="getmodule" tabindex="-1"><code>getModule</code> <a class="header-anchor" href="#getmodule" aria-label="Permalink to &quot;`getModule`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(courseId: string, topicId: string, moduleId: string): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Module </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ForbiddenException</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Retrieves a module of a course.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>courseId</code> (string): The ID of the course.</li><li><code>topicId</code> (string): The ID of the topic.</li><li><code>moduleId</code> (string): The ID of the module.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><code>Promise&lt;Module | ForbiddenException&gt;</code>: A promise that resolves to the module or a <code>ForbiddenException</code> if the course, topic, or module is not found.</li></ul></li></ul>',34),o=[l];function r(n,h,d,p,c,u){return i(),s("div",null,o)}const E=e(a,[["render",r]]);export{k as __pageData,E as default};
