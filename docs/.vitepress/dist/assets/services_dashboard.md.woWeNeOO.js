import{_ as e,o as i,c as s,R as t}from"./chunks/framework.6Daji7ki.js";const k=JSON.parse('{"title":"Dashboard Service Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"services/dashboard.md","filePath":"services/dashboard.md"}'),a={name:"services/dashboard.md"},l=t('<h1 id="dashboard-service-documentation" tabindex="-1">Dashboard Service Documentation <a class="header-anchor" href="#dashboard-service-documentation" aria-label="Permalink to &quot;Dashboard Service Documentation&quot;">​</a></h1><p>The <code>DashboardService</code> is a part of the AI-Res server and provides functionality related to user dashboards and profiles.</p><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h2><ul><li><a href="#class-dashboardservice">Class: DashboardService</a><ul><li><a href="#methods">Methods</a><ul><li><a href="#validatetokenanduserid">validateTokenAndUserId</a></li><li><a href="#validateidformat">validateIdFormat</a></li><li><a href="#verifyuser">verifyUser</a></li><li><a href="#getpublicprofile">getPublicProfile</a></li><li><a href="#getstatus">getStatus</a></li><li><a href="#getprofile">getProfile</a></li><li><a href="#updateprofile">updateProfile</a></li><li><a href="#updatesettings">updateSettings</a></li><li><a href="#getachievements">getAchievements</a></li><li><a href="#claimachievement">claimAchievement</a></li></ul></li></ul></li></ul><h2 id="class-dashboardservice" tabindex="-1">Class: DashboardService <a class="header-anchor" href="#class-dashboardservice" aria-label="Permalink to &quot;Class: DashboardService&quot;">​</a></h2><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><h4 id="validatetokenanduserid" tabindex="-1"><code>validateTokenAndUserId</code> <a class="header-anchor" href="#validatetokenanduserid" aria-label="Permalink to &quot;`validateTokenAndUserId`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">private </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validateTokenAndUserId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(token: string, userId: string): BadRequestException </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span></code></pre></div><p>Validates the token and user ID.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>token</code> (string): The token to validate.</li><li><code>userId</code> (string): The user ID to validate.</li></ul></li><li><p><strong>Throws:</strong></p><ul><li><code>BadRequestException</code>: If the token or user ID is invalid.</li></ul></li></ul><h4 id="validateidformat" tabindex="-1"><code>validateIdFormat</code> <a class="header-anchor" href="#validateidformat" aria-label="Permalink to &quot;`validateIdFormat`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">private </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validateIdFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id: string, field: string): number</span></span></code></pre></div><p>Validates the ID format.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>id</code> (string): The ID to validate.</li><li><code>field</code> (string): The field name associated with the ID.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><code>number</code>: The parsed ID.</li></ul></li><li><p><strong>Throws:</strong></p><ul><li><code>BadRequestException</code>: If the ID format is invalid.</li></ul></li></ul><h4 id="verifyuser" tabindex="-1"><code>verifyUser</code> <a class="header-anchor" href="#verifyuser" aria-label="Permalink to &quot;`verifyUser`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">verifyUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userId: string): NotFoundException </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span></span></code></pre></div><p>Verifies if a user is verified based on their user ID.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>userId</code> (string): The ID of the user to verify.</li></ul></li><li><p><strong>Throws:</strong></p><ul><li><code>NotFoundException</code>: If the user is not verified.</li></ul></li></ul><h4 id="getpublicprofile" tabindex="-1"><code>getPublicProfile</code> <a class="header-anchor" href="#getpublicprofile" aria-label="Permalink to &quot;`getPublicProfile`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPublicProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(profileId: string): NotFoundException </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Profile</span></span></code></pre></div><p>Retrieves the public profile of a user.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>profileId</code> (string): The ID of the user&#39;s profile.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><code>Profile</code>: The public profile of the user.</li></ul></li><li><p><strong>Throws:</strong></p><ul><li><code>NotFoundException</code>: If the user is not found.</li></ul></li></ul><h4 id="getstatus" tabindex="-1"><code>getStatus</code> <a class="header-anchor" href="#getstatus" aria-label="Permalink to &quot;`getStatus`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): string</span></span></code></pre></div><p>Retrieves the status of the authentication service.</p><ul><li><strong>Returns:</strong><ul><li><code>string</code>: A string indicating the status of the authentication service.</li></ul></li></ul><h4 id="getprofile" tabindex="-1"><code>getProfile</code> <a class="header-anchor" href="#getprofile" aria-label="Permalink to &quot;`getProfile`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(token: string, userId: string): NotFoundException </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> User</span></span></code></pre></div><p>Retrieves the user profile.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>token</code> (string): The user token.</li><li><code>userId</code> (string): The user ID.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><code>User</code>: The user profile.</li></ul></li><li><p><strong>Throws:</strong></p><ul><li><code>NotFoundException</code>: If the user is not found.</li></ul></li></ul><h4 id="updateprofile" tabindex="-1"><code>updateProfile</code> <a class="header-anchor" href="#updateprofile" aria-label="Permalink to &quot;`updateProfile`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updateProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(token: string, userId: string, dto: DashboardDto): NotFoundException </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> User</span></span></code></pre></div><p>Updates the user profile.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>token</code> (string): The user token.</li><li><code>userId</code> (string): The user ID.</li><li><code>dto</code> (DashboardDto): The dashboard DTO containing the updated profile information.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><code>User</code>: The updated user profile.</li></ul></li><li><p><strong>Throws:</strong></p><ul><li><code>NotFoundException</code>: If the user is not found.</li></ul></li></ul><h4 id="updatesettings" tabindex="-1"><code>updateSettings</code> <a class="header-anchor" href="#updatesettings" aria-label="Permalink to &quot;`updateSettings`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updateSettings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(token: string, userId: string, dto: UserSettingsDto): UserSettings</span></span></code></pre></div><p>Updates the user settings.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>token</code> (string): The user token.</li><li><code>userId</code> (string): The user ID.</li><li><code>dto</code> (UserSettingsDto): The user settings DTO containing the updated settings information.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><code>UserSettings</code>: The updated user settings.</li></ul></li></ul><h4 id="getachievements" tabindex="-1"><code>getAchievements</code> <a class="header-anchor" href="#getachievements" aria-label="Permalink to &quot;`getAchievements`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAchievements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(token: string, userId: string): NotFoundException </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UserAchievements</span></span></code></pre></div><p>Retrieves the user achievements.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>token</code> (string): The user token.</li><li><code>userId</code> (string): The user ID.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><code>UserAchievements</code>: The user achievements.</li></ul></li><li><p><strong>Throws:</strong></p><ul><li><code>NotFoundException</code>: If the user is not found.</li></ul></li></ul><h4 id="claimachievement" tabindex="-1"><code>claimAchievement</code> <a class="header-anchor" href="#claimachievement" aria-label="Permalink to &quot;`claimAchievement`&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">claimAchievement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(token: string, userId: string, achievementId: string): NotFoundException </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ConflictException </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> User</span></span></code></pre></div><p>Claims an achievement for the user.</p><ul><li><p><strong>Parameters:</strong></p><ul><li><code>token</code> (string): The user token.</li><li><code>userId</code> (string): The user ID.</li><li><code>achievementId</code> (string): The ID of the achievement to claim.</li></ul></li><li><p><strong>Returns:</strong></p><ul><li><code>User</code>: The updated user profile.</li></ul></li><li><p><strong>Throws:</strong></p><ul><li><code>NotFoundException</code>: If the user or achievement is not found.</li><li><code>ConflictException</code>: If the achievement is already claimed by the user.</li></ul></li></ul>',46),o=[l];function r(n,d,h,p,c,u){return i(),s("div",null,o)}const v=e(a,[["render",r]]);export{k as __pageData,v as default};
