generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  username         String             @unique
  photo            String
  name             String
  bio              String
  email            String             @unique
  password         String
  role             String             @default("USER")
  settings         UserSettings       @relation(fields: [userSettingsId], references: [id])
  token            String             @default("demo")
  courses          Course[]           @relation("UserCourses") // Renamed relation
  userCourseStatus UserCourseStatus[]
  interests        String[]
  achievements     Achievement[]
  userSettingsId   Int
}

model UserSettings {
  id            Int     @id @default(autoincrement())
  userId        Int
  publicProfile Boolean @default(true)
  publicEmail   Boolean @default(false)
  User          User[]
}

enum UserCourseStatus {
  IN_PROGRESS
  COMPLETED
  NOT_STARTED
}

model Course {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  image       String
  subtopics   Subtopic[]
  userId      Int?
  Achievement Achievement[]
  tags        String[]
  enrolledBy  User?         @relation("UserCourses", fields: [userId], references: [id])
}

model Subtopic {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  courseId    Int
  image       String
  course      Course   @relation(fields: [courseId], references: [id])
  modules     Module[]
}

model Module {
  id         Int      @id @default(autoincrement())
  name       String
  courseId   Int
  type       String
  content    String[]
  quiz       String[]
  video      String?
  image      String
  subtopicId Int      @map("subtopicId")
  subtopic   Subtopic @relation(fields: [subtopicId], references: [id])
}

model Achievement {
  id          Int    @id @default(autoincrement())
  name        String
  icon        String
  description String
  courseId    Int
  userId      Int
  course      Course @relation(fields: [courseId], references: [id])
  user        User   @relation(fields: [userId], references: [id])
}
